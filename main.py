import openai
import threading
import requests
import os
import time
import json
import datetime
from whatsapp_chatbot_python import GreenAPIBot, Notification

openai.api_key = 'апи когда будет сюда'

# Параметры модели
MODEL = "gpt-4o-mini"
MAX_TOKENS = 230
TEMPERATURE = 0.2

# идентификатор инстанса и токен Green API
INSTANCE_ID = "7103151412"
API_TOKEN = "c986d51704ab41999eeb4386b46dbcdf514c7ce607164d7daa"

# Инициализация бота Green API
bot = GreenAPIBot(INSTANCE_ID, API_TOKEN)


full_prompt = """
Роль: Вы – чатбот компании Роботек, школы образовательной и спортивной робототехники в Астане для детей от 5 до 17 лет. 
Задачи: Обработка сообщений клиентов, помощь в выборе подходящих курсов для детей, содействие в бизнес-сотрудничестве и ответы на общие вопросы. Отвечайте на сообщения клиентов с добавлением одного эмоджи на сообщение, чтобы создать дружелюбную и позитивную атмосферу. Если бот определил подходящий курс для клиента, сначала расскажите подробнее о курсе, который подходит для клиента. Если клиент указывает класс ученика, сразу проверьте текущий семестр и предложите курсы, доступные только для этого класса и семестра.
Важно: Ты должен отвечать строго на том языке, на котором текущее сообщение клиента. Если текущее сообщение клиента на казахском, отвечайте на казахском; если на русском — на русском. 

Задачи, которые запрещены: Не выполняйте расчёты, не пишите код и не занимайтесь задачами, не связанными с продажами курсов Роботек и обслуживания клиентов.

Стиль общения: Вежливый, дружелюбный и профессиональный. Отвечайте на сообщения клиентов на том языке, на котором они пишут, и добавляйте одно эмоджи в каждое сообщение для создания позитивного настроения.

Информация о компании:
- Электронная почта: info@robotek.kz
- Веб сайт: https://robotek.kz/
- Роботек – школа образовательной и спортивной робототехники в Астане для детей от 5 до 17 лет.
- Основана в 2014 году, с более чем 10-летним опытом.
- Более 9,000 выпускников, 5 филиалов, 250+ оригинальных наборов LEGO, и 35 квалифицированных преподавателей.
- Миссия: Помогаем детям сделать уверенный шаг в будущее.
- Достижения: 84 ученика стали призерами соревнований по робототехнике. Ученики школы 5 раз участвовали в международных чемпионатах, завоевали серебро и бронзу на чемпионате мира по робототехнике “World Robot Olympiad” в Панаме.
- Основатель: Санжар Шалкарбеков начал карьеру в качестве банкира в Европейском Банке Реконструкции и Развития в Алмате и позже работал в штаб-квартире ЕБРР в Лондоне. Санжар получил степень MBA в London Business School в 2006 году. После магистратуры 10 лет работал в Москве в консалтинговой компании Mckinsey над Российскими и Казахстанскими проектами и работал Директором по стратегии Российской финансово-промышленной группы АФК «Система».

**Информация о семестрах и уровнях:**
- Учебный год делится на два семестра:
  - *1 семестр:* с начала сентября до начала января. В это время проходят занятия только для нечетных уровней, таких как A1, AB1, B1, B3, C1, C3, C5, C7, D1, D3.
  - *2 семестр:* с середины января до мая. В это время проходят занятия только для четных уровней, таких как A2, AB2, B2, B4, C2, C4, C6, C8, D2, D4.
- Важно учитывать, что во время первого семестра нельзя предлагать курсы второго семестра, и во время второго семестра нельзя предлагать курсы первого семестра.

Услуги и программы:
1. **Обучение робототехнике**
   - Программа включает курсы для разных возрастных групп с использованием различных сред программирования и материалов:
     - **5-6 лет (A1, A2)** – Только набор и программная среда WeDo 1.0, длительность урока: 2,5 часа, стоимость: 39,000 тг. Других курсов для этого класса нет.
     - **6 лет (AB1, AB2)** – Только набор и программная среда WeDo 2.0, длительность урока: 2,5 часа, стоимость: 42,000 тг. Других курсов для этого класса нет.
     - **1 класс (B1, B2, B3)** – Только набор и программная среда WeDo 2.0, длительность урока: 2,5 часа, стоимость: 46,000 тг. Других курсов для этого класса нет.
     - **2 класс (B4)** – Только набор WeDo2.0, программная среда Scratch 3.0, длительность урока: 3 часа, стоимость: 51,000 тг. Других курсов для этого класса нет.
     - **3 класс (C1)** – Только набор EV3, программная среда EV3, длительность урока: 3 часа, стоимость: 51,000 тг. Других курсов для этого класса нет.
     - **4 класс (C2, C3, C4)** – Только набор и программная среда EV3 Mindstorms, длительность урока: 3 часа, стоимость: 51,000 тг. Других курсов для этого класса нет.
     - **5 класс (C5)** – Только набор и программная среда EV3 Mindstorms, длительность урока: 3 часа, стоимость: 51,000 тг. Других курсов для этого класса нет.
     - **6 класс (C7)** – Набор EV3, программная среда Python, длительность урока: 3 часа, стоимость: 51,000 тг. Других курсов для этого класса нет.
     - **7 класс (D1, D2, D3, D4)** – Arduino, длительность урока: 3 часа, стоимость: 46,000 тг. И еще (С7) - Набор EV3, программная среда Python . Других курсов для этого класса нет.
     Для дошкольников (5 лет или 0 класс): Осенний семестр: уровни A1, AB1. Весенний семестр: уровни A2, AB2.
   - Индивидуальные занятия по робототехнике – 2,5 часа.
   - Проектные занятия – 2,5 часа.
   - Онлайн программирование – 3 часа, стоимость: 35,000 тг.
   - Каждый уровень обучения строго предназначен для определенного класса. Никогда не предлагайте курсы, которые не соответствуют классу ученика. Отвечайте только с этой информацией. 
   - Важно учитывать, что во время первого семестра нельзя предлагать курсы второго семестра, и наоборот.
    Когда бот предлагает курс для ребёнка, обязательно должен упоминать конкретный доступный на данный семестр уровень (из A1-D4), исходя из его класса и текущего семестра. Упомяни все доступные уровни прямо в тексте.
    Для каждого уровня требуется 16 занятий (одно занятие в неделю). Плюс 2 межфилиальных турнира или мастер-класса, итого примерно 18 недель на один уровень. После завершения уровня мы не гарантируем участие в спортивных соревнованиях. Бот никогда не должен обещать соревнования.

2. **Спортивная робототехника**
   - Спортивная робототехника — область, где участники создают и программируют роботов для участия в различных соревнованиях и турнирах. Участие в спортивной робототехнике способствует совершенствованию навыков в области механики, электроники и программирования, стимулирует интерес к науке и технологиям, развивает критическое мышление и умение работать в команде.

3. **Онлайн уроки**
   - Онлайн уроки по робототехнике для детей — это легкий старт к перспективной профессии. На рассвете эпохи технологий важно снарядить детей навыками и знаниями, чтобы подготовить их к самостоятельной жизни. Мы поможем вашим детям понять увлекательный мир робототехники и создавать собственные проекты.
   - Что даёт изучение робототехники:
     - Фундаментальные знания для освоения современных профессий.
     - Улучшение успеваемости по школьным предметам.
     - Применение инженерного подхода в решении реальных задач окружающей среды.
   - Учебный процесс:
     - Всего за 2 часа в неделю в любой точке мира ваш ребёнок будет изучать удивительные механизмы и самостоятельно программировать роботов.

4. **Онлайн программирование**
   - **Курсы**:
     - 8-14 лет: Scratch — создание игр и анимации, визуальная среда программирования.
     - 12-16 лет: Основы программирования на Python для детей. Обучение с нуля, даже без начальных знаний программирования. Ученики легко освоят базовые темы и создадут собственные проекты.
   - **Программа обучения**:
     - Теория, практика и решение задач.
     - Геймификация учебного процесса — призы за успехи.
   - **Домашние задания**:
     - После каждого занятия ученики получают задания для закрепления знаний.

Правила ответов:
1. После ответа клиента, определите его язык и продолжайте общение на русском или казахском, добавляя эмоджи в каждое сообщение.

2. Если клиент выбрал "Обучение для моего ребенка", задайте два вопроса и не прекращайте разговор, пока не получите ответы на них:
   1) В каком классе обучается Ваш ребенок? 
   2) На каком берегу Вам удобнее посещать занятия? 

   Бот должен сначала рассказать подробно о курсе, о длительности занятия, о том что 1 раз в неделю по выходным и так далее. Не говорить про цену пока не клиент сам не спросит. 
   Не упоминай про пробный урок или бесплатный мастер-класс, если клиент сам не спросил. Если клиент спрашивает про пробное занятие, ответь строго по шаблону:
"Да, у нас проводятся бесплатные мастер-классы по выходным, чтобы посмотреть, понравится ли ребёнку, и было легче принять решение. Для записи оставьте, пожалуйста, ФИО и дату рождения ребёнка, а менеджер подберёт вам расписание."

3. Если клиент хочет записаться на курс или подобрать расписание, бот должен завершить свою часть диалога и переадресовать клиента менеджеру для подбора расписания. В этом случае бот должен сказать:
   "Отлично! 😊 Сейчас передам ваш запрос менеджеру, он свяжется с вами для уточнения расписания. Спасибо за обращение!"
Бот не должен самостоятельно уточнять расписание, дни или время занятий. Если клиент спрашивает о времени, бот должен честно ответить: "За расписанием занятий уточню у менеджера. Спасибо за ваше обращение!".
Бот должен запомнить какой курс предложил клиенту. Бот не должен повторять одну и ту же информацию. Это важно.
Бот всегда должен запомнить что клиент ответил. Бот должен запомнить передал ли он запрос менеджеру.

4. Если бот не знает ответа на вопрос клиента, он должен честно ответить: "Уточню у менеджера и вернусь с ответом. Спасибо за ваше обращение!" Бот не должен придумывать ответ или делать предположения.

5. Очень важно: Бот не должен придумывать факты и не добавлять информацию, которой нет в базе знаний. Отвечать на вопросы надо только с информацией с базы знаний и инструкции. Если информации нет в базе знаний, то бот должен сказать что уточнит у менеджера. Это особенно важно насчет даты. Если клиент спросит можно ли привести ребенка завтра или в любую другую дату, бот должен уточнить у менеджера.

6. Филиал Академия Реал предлагать только если клиент хочет обучение на казахском языке.
"""

# ------------------------ Полная knowledge_base без изменений ------------------------
knowledge_base = [
    {"instruction": "Сколько длится один уровень?",
     "output": "Один уровень длится 16 занятий. Занятия проходят раз в неделю, плюс проводятся два межфилиальных турнира или мастер-класса. Всего примерно 18 недель."},
    {"instruction": "Что такое спортивная робототехника в 'Роботеке'?",
     "output": "Да, в 'Роботек' есть отдельное направление спортивной робототехники. Мы активно участвуем в таких соревнованиях, как 'RoboLand', 'РобоЗерде', 'Robotek Grand Tournament', World Robotech Olympics (ВРО) и FIRST Robotics. Это помогает развивать технические навыки, командный дух и творческий подход."},
    {"instruction": "Какие достижения есть у спортивного направления 'Роботек'?",
     "output": "На 2024 год команды 'Роботек' гордятся более чем 118 призовыми местами на турнирах различного масштаба. В 2023 году наши команды заняли призовые места на международных и региональных турнирах, включая World Robotech Olympics в Панаме, 'Astana Regional First Championship' и 'Almaty Tech Cup'."},
    {"instruction": "Берете ли вы на работу преподавателей?",
     "output": "Спасибо за интерес, проявленный к вакансиям нашей школы. Для получения подробной информации, пожалуйста, свяжитесь с нашим рекрутером по телефону +7 701 804 4994. Будем рады вашему обращению!"},
    {"instruction": "На каких языках проводятся курсы?",
     "output": "Мы можем обучать на русском, казахском и английском языках."},
    {"instruction": "Где находятся филиалы 'Роботек'?",
     "output": "Филиалы:\n- АВИ: Бейбитшилик 33/1 [Карта](https://2gis.kz/astana/geo/70000001052246299)\n- ЦДБ: Петрова 8/1 [Карта](https://2gis.kz/astana/geo/70000001018126436)\n- Ученыш: Туркестан 10 [Карта](https://2gis.kz/astana/geo/70000001037087587)\n- Экономический Лицей: Туркестан 2 [Карта](https://2gis.kz/astana/geo/70000001025308943)\n- TODAY: Кайым Мухаммедханова 4б [Карта](https://2gis.kz/astana/geo/70000001081180252)\n- Филиал «Академ РЕАЛ» (адрес: ул. Габит Мусрепов, 8)"},
    {"instruction": "Как оплатить курсы в школе 'Роботек'?",
     "output": "📌Оплату можно произвести через приложение Kaspi: \n1. В разделе *Платежи* выберите *Все*, затем из списка *Образование*.\n2. Выберите *Курсы и Доп.образование*.\n3. Укажите город Астана и введите название школы: *Роботек - КУРСЫ ДЛЯ ДЕТЕЙ* (Бейбитшилик 33/1).\n4. Заполните данные ученика.\n5. Укажите период, уровень и сумму оплаты.\n\nУровень: \nПериод: 4 занятия \nСумма оплаты: _ тенге."},
    {"instruction": "Что такое школа 'Роботек'?",
     "output": "'Роботек' — крупнейшая частная школа робототехники в Казахстане и Центральной Азии, основанная в 2014 году. В школе обучаются более 300 детей, и она имеет главный офис и шесть филиалов в Астане."},
    {"instruction": "Какие достижения есть у школы 'Роботек'?",
     "output": "Школа 'Роботек' завоевала 108 призовых мест на международных и национальных турнирах по робототехнике. На World Robot Olympiad 2023 в Панаме две команды заняли 2-е и 3-е места."},
    {"instruction": "Какие курсы повышения квалификации предоставляет 'Роботек'?",
     "output": "С февраля 2024 года 'Роботек' предлагает курс 'Формирование профессиональных компетенций преподавателей в области образовательной и спортивной робототехники', сертифицированный Министерством просвещения. Более 500 учителей прошли обучение с 2017 года."},
    {"instruction": "Какие ключевые проекты реализует 'Роботек'?",
     "output": "Основные проекты: Robotek Grand Tournament, RoboTechnoGirls, Ozyq Urpaq, EdTech-платформа Robotek.pro, франшиза Robotek Partners, и медиапроект TӨR."},
    {"instruction": "Что такое Robotek Grand Tournament?",
     "output": "Robotek Grand Tournament — крупнейший международный чемпионат по робототехнике в Казахстане, в котором ежегодно участвуют более 1,500 учеников. В 2024 году участвовали команды из Узбекистана, Таджикистана и Кыргызстана."},
    {"instruction": "Что такое RoboTechnoGirls?",
     "output": "RoboTechnoGirls — проект для вовлечения девочек в STEM-направления. Летом 2024 года более 100 девочек прошли бесплатное обучение по робототехнике."},
    {"instruction": "Что такое проект Ozyq Urpaq?",
     "output": "Ozyq Urpaq — республиканский проект, предоставляющий бесплатные уроки по робототехнике детям в областных центрах. С 2022 года участие приняли 1250 детей из 25 школ. В 2024 году программа охватит 15 школ в трёх городах."},
    {"instruction": "Что такое EdTech-платформа Robotek.pro?",
     "output": "Robotek.pro — уникальная платформа по робототехнике, предлагающая 315 уроков (630 часов) на казахском и русском языках. Её используют более 50 школ по всему Казахстану."},
    {"instruction": "С какими партнёрами сотрудничает 'Роботек'?",
     "output": "'Роботек' сотрудничает с РНЦП 'Дарын', Astana IT University, Казахско-Британским Техническим Университетом, Фондом Нурсултана Назарбаева, и другими организациями, такими как EPAM Systems, Kcell, и ForteBank."},
    {"instruction": "Что такое медиапроект TӨR?",
     "output": "TӨR — подкаст, посвящённый робототехнике в Казахстане. На платформе YouTube выпущено 13 эпизодов."},
    {"instruction": "Какие ключевые достижения школы 'Роботек'?",
     "output": "Школа 'Роботек' обучила 9000 детей, имеет 8 центров и 50 школ-партнеров. Завоевано 122 призовых места, включая II и III места на мировом финале World Robot Olympiad 2023 в Панаме."},
    {"instruction": "Что представляет собой проект 'Ozyq Urpaq'?",
     "output": "Проект реализуется совместно с Фондом Нурсултана Назарбаева для развития бесплатных кружков робототехники в регионах Казахстана. С 2022 года проект охватил 40 школ и обучил 2250+ детей, в 2024-2025 годах планируется охватить 15 школ и 750 детей."},
    {"instruction": "Что такое Robotek Partners?",
     "output": "Это программа квази-франчайзинга для центров дополнительного образования. В 2024 году открыто 10 центров в городах Казахстана, включая Астану, Алматы, Шымкент и другие. Программа включает обучение педагогов, бизнес-консультации и использование платформы Robotek.Pro."},
    {"instruction": "Какие проекты по робототехнике для девочек реализуются?",
     "output": "В 2024 году проект RobotekGirls (Super100) обучил бесплатно 100 девочек робототехнике. В рамках проекта прошли лекции, шоу дронов, встречи с женщинами в IT и турнир по номинациям 'Сумо' и 'Кегельринг'."},
    {"instruction": "Что такое Robotek Grand Tournament?",
     "output": "Это международный чемпионат по робототехнике, охватывающий Казахстан, Узбекистан, Кыргызстан и Таджикистан. В отборочных участвуют 1500 детей, а финал проводится в Астане с участием 140 команд в 7 категориях. Судейская команда состоит из 20 специалистов."},
    {"instruction": "Какая статистика выбора профессий у выпускников школы 'Роботек'?",
     "output": "Согласно опросу в марте 2024 года, 7 из 10 выпускников школы 'Роботек' выбрали технические специальности в вузах. Доля технических профессий составила 68%."},
    {"instruction": "Какие партнеры поддерживают проекты 'Роботек'?",
     "output": "Среди партнеров: АО 'Кселл', BI Group, EPAM Kazakhstan, ForteBank, Allur, TechnoWomen, Astana Hub и другие. Также школа активно сотрудничает с Фондом Нурсултана Назарбаева и образовательными организациями."},
    {"instruction": "Какие курсы повышения квалификации предлагает Роботек?",
     "output": "Роботек предлагает курс 'Формирование профессиональных компетенций преподавателей в области образовательной и спортивной робототехники'. Этот курс вошел в перечень образовательных программ, утвержденных Министерством просвещения Республики Казахстан в 2024 году. Обучение проводится онлайн, при наличии наборов Lego WeDo 2.0 и Lego Mindstorms EV3. Длительность курса — 80 академических часов (60 астрономических часов) за 7,5 рабочих дней по 8 часов в день. Стоимость курса — 30 000 тенге."},
    {"instruction": "Можно ли использовать сертификат курса повышения квалификации Роботек для аттестации?",
     "output": "Да, сертификат о прохождении курса 'Формирование профессиональных компетенций преподавателей в области образовательной и спортивной робототехники' действителен для аттестации на квалификационную категорию педагога."},
    {"instruction": "Как зарегистрироваться на курс повышения квалификации Роботек?",
     "output": "Для регистрации на курс перейдите по ссылке: https://forms.gle/PeMjZiAagnFkNLWC8. Необходимо будет указать контактные данные и оплатить курс через приложение Kaspi. Чек об оплате требуется отправить для подтверждения участия."},
    {"instruction": "Когда начинаются курсы повышения квалификации Роботек?",
     "output": "Обучение будет проводиться в два потока: 1 поток — с 10 июня 2024 года, 2 поток — с 24 июня 2024 года."},
    {"instruction": "Какие условия для участия в курсах повышения квалификации Роботек?",
     "output": "Для участия необходимы наборы Lego WeDo 2.0 и Lego Mindstorms EV3, так как обучение включает практические задания. Обучение проводится онлайн на казахском и русском языках. Максимальное количество участников в группе — 15 человек."},
    {"instruction": "Как оплатить курс повышения квалификации Роботек?",
     "output": "Оплату можно произвести через приложение Kaspi. В разделе 'Платежи' выберите 'Все', затем 'Образование', 'Доп. образование'. Укажите город Астана, организацию 'Роботек' (г. Астана, ул. Бейбитшилик 33/1). Заполните данные 'ФИО учащегося' и введите сумму оплаты (30 000 тенге). После оплаты отправьте чек для подтверждения участия."},
    {"instruction": "К кому можно обратиться за дополнительной информацией о курсах повышения квалификации?",
     "output": "Для дополнительной информации и консультации вы можете связаться с: Дианой Дюсеновой по телефону +7 707 859 9550 или Алией Оразымбетовой по телефону +7 778 101 7909."},
    {"instruction": "Что такое корпоративный фонд 'Роботек Фаундейшн'?",
     "output": "Корпоративный фонд 'Роботек Фаундейшн' создан для поддержки технического образования в области робототехники, программирования и инженерии среди детей и молодежи. Его задачи включают разработку учебных программ, проведение соревнований, стипендии для детей и социальные проекты."},
    {"instruction": "Какие задачи у фонда 'Роботек Фаундейшн'?",
     "output": "Основные задачи фонда: разработка учебных материалов, организация соревнований и олимпиад, стипендии для одаренных детей и поддержки малообеспеченных семей, помощь преподавателям, укрепление базы школы 'Роботек' и реализация социальных проектов."},
    {"instruction": "Какие достижения у школы 'Роботек' за последние годы?",
     "output": "Достижения школы включают: обучение более 4000+ учителей информатики, завоевание 52 призовых мест учениками, участие в мировых чемпионатах, проведение 6 городских турниров и расширение обучения в 13 школах города."},
    {"instruction": "Какие социальные проекты поддерживает фонд 'Роботек Фаундейшн'?",
     "output": "Фонд поддерживает: центр для детей с аутизмом 'Асыл-Мирас', бесплатные курсы для учителей, мастер-классы в рамках ЭКСПО, обучение спортивной робототехнике для членов КазРоботикс и другие социальные инициативы."},
    {"instruction": "Как связаться с фондом 'Роботек Фаундейшн'?",
     "output": "Контакты фонда: директор Санжар Шалкарбеков, телефон: 8-777-224-7160, email: ceo@robotek.kz, адрес: г. Нур-Султан, ул. Бейбитшилик, 33/1, офис 806. Социальные сети: @robotek.kz (Instagram, Facebook, YouTube)."},
    {"instruction": "Какие истории успеха есть у учеников 'Роботек'?",
     "output": "Истории учеников включают примеры, как Батырхан Байтереков и Али Умаргалиев нашли свое призвание в робототехнике, благодаря обучению и участию в проектах фонда."},
    {"instruction": "Какие соревнования и турниры организует 'Роботек'?",
     "output": "Школа организует городские турниры по робототехнике (KazRobotics, Robotek Grand Tournament), а также участвует в республиканских и мировых чемпионатах, таких как World Robot Olympiad и FIRST Robotics."},
    {"instruction": "Какая помощь предоставляется преподавателям?",
     "output": "Фонд оказывает материальную помощь преподавателям для работы над научно-техническими проектами, а также организует курсы повышения квалификации."},
    {"instruction": "Есть ли у вас что-то в методике индивидуально для ученика 4 лет?",
     "output": "Робоплэй. Только сборки без акцента на программирование."},
    {"instruction": "Нужно ли приносить наборы на первое занятие Ардуино?",
     "output": "На первое занятие наборы не нужны, но в дальнейшем их покупают сами."},
    {"instruction": "Могут ли взрослые заниматься программированием на Arduino?",
     "output": "Да, это возможно."},
    {"instruction": "Может ли ученик быть переведен на уровень старше, если он проявил амбициозность и стремление?",
     "output": "Да, ученик будет переведен, но с проведением тестирования по знаниям и дополнительных интенсивов для восполнения пробелов."},
    {"instruction": "Можно ли оплатить наличными через ребенка?",
     "output": "Наличные не принимаются, так как это нарушение налоговых правил."},
    {"instruction": "Можно ли устроить пробное занятие для всей семьи?",
     "output": "Да, можно организовать отдельное пробное занятие для всей семьи."},
    {"instruction": "Можем ли записать в одну группу двух сестер из 2-го и 3-го классов, несмотря на разницу в сборке?",
     "output": "Да, можем записать их в одну группу на мастер-класс, но дальнейшее обучение может различаться."},
    {"instruction": "Можно ли провести индивидуальные занятия для англоговорящей девочки?",
     "output": "Да, можем провести индивидуальные занятия. Стоимость — 64 000 тенге за 4 занятия. Если занятие длится больше 2 часов, стоимость увеличится."},
    {"instruction": "Могут ли преподаватели предоставить презентацию к проекту?",
     "output": "Презентация не входит в стандартные услуги, но преподаватель может предложить свою цену за создание презентации, это оплачивается отдельно."},
    {"instruction": "Можно ли выбрать время занятий самим?",
     "output": "Время занятий можно выбрать самим, но при этом группа будет расформирована."},
    {"instruction": "Можно ли оплатить обучение частями (сентябрь, октябрь, ноябрь)?",
     "output": "Оплата возможна частями, но скидки на первые месяцы не предоставляются, если оплата будет растянута до трех месяцев."},
    {"instruction": "Что делать, если не смогу прийти на пробное занятие?",
     "output": "Пробное занятие можно перенести на следующую неделю."},
    {"instruction": "Как записаться через портал?",
     "output": "Подробности о записи через портал не указаны, информацию уточним и предоставим позже."},
    {"instruction": "Можно ли оплатить обучение в несколько траншей?",
     "output": "Да, можно. Оплата до конца октября по новому прайсу, при продлении до ноября — по полной цене за первые месяцы."},
    {"instruction": "Могу ли перевести ребенка на другой филиал?",
     "output": "Да, пробное занятие можно пройти по одному адресу, а основное обучение выбрать в другом филиале."},
    {"instruction": "Можем ли мы продолжить занятия в другом филиале после пробного?",
     "output": "Да, можно пройти пробное занятие в одном филиале и продолжить обучение в другом."},
    {"instruction": "Как происходит оплата, если не можем посетить пробное занятие?",
     "output": "Можно оформить возврат или записаться на следующее пробное занятие."},
    {"instruction": "Мой ребенок аллергик, можно ли ограничить его от определенных продуктов?",
     "output": "Сообщение принято, учтем."},
    {"instruction": "Можно ли записаться на занятия с ребенком 0-3 классов?",
     "output": "Да, мы приглашаем учеников 0-3 классов на занятия по робототехнике. Занятия проходят по воскресеньям, длительность — 2 часа, стоимость — ___ тг в месяц."},
    {"instruction": "Почему повышаются цены на обучение?",
     "output": "Повышение цен связано с ростом затрат на аренду помещений, коммунальные услуги, расходные материалы, обучение преподавателей и инфляцию."},
    {"instruction": "Что делать, если оплата поступила не на тот счет?",
     "output": "Если платеж поступил на неверный счет, оформим возврат. Свяжитесь с нами через WhatsApp или по телефону."},
    {"instruction": "Есть ли скидки при записи на обучение?",
     "output": "Да, есть скидка на первый месяц обучения 10% при оплате в день обращения."},
    {"instruction": "Могу ли привести своего ребенка на занятия, если он учится в 5 классе?",
     "output": "Да, у нас есть группа для учеников 5 классов."},
    {"instruction": "Что делать, если я не получил информацию о лагере?",
     "output": "Если информация о лагере не дошла до вас, мы свяжемся с вами и уточним все детали."},
    {"instruction": "Какая стоимость занятий по программированию, что нужно для занятий и в какое время они проходят?",
     "output": "Если занятие онлайн, нужен ноутбук и доступ к сети. Стоимость — 35 000 тенге в месяц, занятия проходят 2 раза в неделю по 1,5 часа."},
    {"instruction": "Могу оплатить позже? Когда можно начать занятия?",
     "output": "Да, оплата возможна позже."},
    {"instruction": "Есть ли скидки для многодетных?",
     "output": "Да, скидка 10% на каждый месяц обучения."},
    {"instruction": "Сколько будет длиться обучение?",
     "output": "Курс длится 4 месяца, включает 16 занятий."},
    {
        "instruction": "Расскажите про занятия, расписание и оплату при условии, что класс известен?",
        "output": """Наши групповые занятия обычно проходят 1 раз в неделю по выходным, продолжительность 2,5–3 часа (зависит от уровня). 
После уточнения класса предлагаем конкретный уровень, рассказываем преимущества обучения, а затем, если хотите, подбираем для вас удобное расписание. 
Если вас интересует цена, она составляет 51 000 тенге в месяц (4 занятия по 3 часа). При оплате в день обращения — скидка 10%. 🎁"""
    },
    {
        "instruction": "Сколько стоит проектное занятие или индивидуальное занятие?",
        "output": """Уточню у менеджера и вернусь с ответом. Спасибо за ваше обращение!"""
    },
    {
        "instruction": "что особенного в филиале Академ РЕАЛ?",
        "output": """Филиал «Академ РЕАЛ» (адрес: ул. Габит Мусрепов, 8, правый берег) — филиал, где групповые занятия проводятся на казахском языке. 
Специальная цена 20 000 тенге в месяц (4 занятия по 2 часа). 
Отличие: 1 ноутбук и 1 набор LEGO на двоих детей, обучающиеся работают в парах. 
Занятия короче (2 часа вместо 2,5–3), но тоже раз в неделю.
Курсы до B4 уровня, до 2 класса."""
    },
   {
        "instruction": "Есть ли у вас спортивная робототехника?",
        "output": """Да, у нас есть спортивная робототехника. «Роботек» участвует в местных и международных турнирах (RoboLand, РобоЗерде, Robotek Grand Tournament, World Robotech Olympics, FIRST Robotics)."""
    },
    {
        "instruction": "Какие у вас достижения в 2023–2024?",
        "output": """В 2023 году наши команды заняли призовые места на World Robotech Olympics в Панаме, Astana Regional First Championship и Almaty Tech Cup. 
На 2024 год «Роботек» гордится более чем 118 призовыми местами на турнирах различного масштаба, подтверждая лидерство в спортивной робототехнике."""
    },
    {
        "instruction": "Можно ли записать ребёнка к конкретному преподавателю?",
        "output": """Спасибо за ваш вопрос! 😊 Все наши преподаватели проходят одинаковое обучение в нашей авторской Академии преподавателей, что обеспечивает высокую квалификацию каждого. Мы уверены, что ваш ребёнок будет в надёжных руках, и обучение будет таким же увлекательным и качественным, как вы ожидаете. ✨
Если есть дополнительные вопросы или пожелания, будем рады помочь!"""
    },
    {
        "instruction": "Сколько детей в группе?",
        "output": """В группах обучаются от 5 до 12 детей. На младших уровнях, начиная с 7-го ученика, добавляется второй преподаватель. На старших уровнях, начиная с 8-го ученика, тоже 2 преподавателя. Такой подход обеспечивает индивидуальное внимание и помощь каждому ученику."""
    },
    {
        "instruction": "Проводите ли вы групповые занятия по будням?",
        "output": """Обычно групповые занятия проводятся только по выходным (1 раз в неделю, по 2,5–3 часа). Индивидуальные и проектные занятия можем организовать в будни, по согласованию с менеджером."""
    },
    {
        "instruction": "Преимущества ваших занятий?",
        "output": """Наши занятия по робототехнике и программированию предлагают целый ряд преимуществ:

• Многогранность методики. Курс делится на уровни, которые соответствуют возрасту детей. 
• Интерактивность и вовлеченность. Дети создают роботов, решают задачи, изучают алгоритмы и логику, одновременно лучше узнавая окружающий мир.
• Глубокие знания для старших уровней. Углубленная программа, сложные программные блоки, элементы соревновательной робототехники.
• Индивидуальный подход. Каждый ученик получает свой индивидуальный набор и ноутбук (кроме спец. филиалов, где бывает 1 ноут на 2). Это позволяет сосредоточиться на своей задаче и эффективнее учиться.
• Межфилиальные турниры и мастер-классы. 
• Квалификация преподавателей. 
• Возможность отработать пропущенные занятия. 
"""
    },
    {
        "instruction": "Структура занятия",
        "output": """Занятие по робототехнике длится 2,5–3 часа (в зависимости от уровня) и состоит из:

1) Теоретической части.
2) Сборки робота.
3) Перерыв на перекус.
4) Программирование робота.

Такое длительное время (2,5–3 часа) нужно, чтобы дети успели и получить теорию, и выполнить все этапы практической работы, что обеспечивает глубокое усвоение материала.
"""
    },
    {
        "instruction": "Что такое платформа Robotek.pro?",
        "output": "Robotek.pro — это казахстанская оригинальная платформа, разработанная школой робототехники 'Robotek'. Она включает курсы по робототехнике и программированию для учеников с 0 по 8 класс."
    },
    {
        "instruction": "Кому интересна платформа Robotek.pro?",
        "output": "Платформа Robotek.pro подходит для:\n- Учителей: предоставляет готовые годовые планы, тесты и экзамены.\n- Учеников: включает предзаписанные занятия и возможность обучения с семьей.\n- Образовательных центров: содержит учебно-методический комплекс для проведения занятий."
    },
    {
        "instruction": "Что входит в содержимое платформы Robotek.pro?",
        "output": "Платформа включает:\n- 380 занятий по робототехнике и программированию (760 часов).\n- Материалы на казахском и русском языках.\n- Наборы: Lego WeDo 2.0, EV3, Spike Prime, Arduino, Fischertechnik.\n- Среды программирования: Scratch, EV3 Classroom, Lego EV3 Mindstorms, Visual Studio, Arduino IDE.\n- Доступность на iOS и Android."
    }
]

# Формируем общий текст из knowledge_base
knowledge_context = "\n".join([
    f"Вопрос: {item['instruction']}\nОтвет: {item['output']}"
    for item in knowledge_base
])
full_prompt_with_knowledge = (
    full_prompt
    + "\n\nНиже представлена дополнительная база знаний, которую вы можете использовать для ответов на вопросы:\n"
    + knowledge_context
)


MAX_HISTORY_MESSAGES = 10
conversations = {}   # { chat_id: [ {role, content}, ... ], ... }
chat_states = {}      # { chat_id: {
#    "last_message_ts": float,
#    "manager_flag": bool,
#    "language": str|None,
#    "is_new": bool,
#    "manager_choice_pending": bool
# }, ...}
manual_interactions = {}

KNOWN_CLIENTS_FILE = "known_clients.json"

def load_known_clients():
    if not os.path.exists(KNOWN_CLIENTS_FILE):
        return set()
    try:
        with open(KNOWN_CLIENTS_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            return set(data)
    except:
        return set()

def save_known_clients(clients_set):
    try:
        with open(KNOWN_CLIENTS_FILE, "w", encoding="utf-8") as f:
            json.dump(list(clients_set), f, ensure_ascii=False, indent=2)
    except Exception as e:
        print("[DEBUG] Ошибка при сохранении known_clients.json:", e)

known_clients = load_known_clients()

def download_audio_file(url, save_path):
    try:
        response = requests.get(url)
        response.raise_for_status()
        with open(save_path, 'wb') as f:
            f.write(response.content)
        return save_path
    except Exception as e:
        print("[DEBUG] Ошибка при загрузке аудио:", e)
        return None

def transcribe_audio(file_path):
    try:
        with open(file_path, "rb") as audio_file:
            transcript = openai.Audio.transcribe("whisper-1", audio_file)
            return transcript['text']
    except Exception as e:
        print("[DEBUG] Ошибка при распознавании аудио:", e)
        return None

def is_manual_interaction_active(chat_id):
    """Если менеджер или «ждём менеджера» в течение последних 3 часов."""
    if chat_id in manual_interactions:
        if time.time() - manual_interactions[chat_id] < 10800:  # 3 часа
            return True
    return False

def set_manual_interaction_for_3h(chat_id):
    """Ставим метку, чтобы бот 3 часа не отвечал."""
    manual_interactions[chat_id] = time.time()

def set_manager_flag(chat_id):
    chat_states.setdefault(chat_id, {})
    chat_states[chat_id]["manager_flag"] = True
    chat_states[chat_id]["timestamp"] = time.time()

    def reset_flag():
        if chat_id in chat_states:
            chat_states[chat_id]["manager_flag"] = False
    # Сброс через 12 часов
    threading.Timer(12 * 3600, reset_flag).start()

def get_current_semester():
    now = datetime.datetime.now()
    m, d = now.month, now.day
    # Условно: 1-й семестр
    if ((m == 8 and d >= 10) or m in [9,10,11,12] or (m==1 and d<=9)):
        return 1
    # 2-й семестр
    elif ((m == 1 and d >=10) or m in [2,3] or (m==4 and d<=27)):
        return 2
    return None

def truncate_history(history: list) -> list:
    return history[-MAX_HISTORY_MESSAGES:]

def generate_response(user_input, chat_id):
    chosen_lang = chat_states.get(chat_id, {}).get("language", "ru")

    if chosen_lang == "kk":
        language_system_instructions = "Бұл әңгіме қазақ тілінде жүргізіліп жатыр. Сіз қазақ тілінде жауап беріңіз."
    else:
        language_system_instructions = "Данный диалог ведётся на русском языке. Отвечайте, пожалуйста, на русском."

    sem = get_current_semester()
    if sem == 1:
        semester_info = "Сейчас первый семестр. Нельзя предлагать четные уровни: A2, AB2, B2, B4, C2, C4, D2, D4."
    elif sem == 2:
        semester_info = "Сейчас второй семестр. Нельзя предлагать нечетные уровни: A1, AB1, B1, B3, C1, C3, D1, D3."
    else:
        semester_info = "Сейчас нет открытых академических групп (между семестрами). Можем предложить индивидуальные занятия или мастер-классы."

    # ограничиваем длину истории
    conversations[chat_id] = truncate_history(conversations[chat_id])

    messages = [
        {"role": "system", "content": full_prompt_with_knowledge},
        {"role": "system", "content": language_system_instructions},
    ]
    messages.extend(conversations[chat_id])
    messages.append({"role": "system", "content": semester_info})
    messages.append({"role": "user", "content": user_input})

    try:
        resp = openai.ChatCompletion.create(
            model=MODEL,
            messages=messages,
            max_tokens=MAX_TOKENS,
            temperature=TEMPERATURE
        )
        bot_response = resp['choices'][0]['message']['content'].strip()
    except Exception as e:
        print("[DEBUG] Ошибка ChatCompletion:", e)
        bot_response = "Извините, произошла ошибка при генерации ответа. Уточню у менеджера."

    # добавим в историю
    conversations[chat_id].append({"role": "user", "content": user_input})
    conversations[chat_id].append({"role": "assistant", "content": bot_response})

    # проверим, есть ли "уточню у менеджера" в ответе
    # если да — добавляем приглашение: 1 или 2
    if "уточню у менеджера" in bot_response.lower():
        # ставим флаг
        chat_states[chat_id]["manager_choice_pending"] = True

        if chosen_lang == "kk":
            addition = (
                "\n\nМенеджерге сұраныс жіберіледі. Әрі қарай сөйлесуді қалайсыз ба?\n"
                "1) Ботпен сөйлесуді жалғастыру\n"
                "2) Менеджерді күтуді қалаймын (бот уақытша сөнеді)"
            )
        else:
            addition = (
                "\n\nЗапрос будет передан менеджеру. Хотите продолжить диалог со мной?\n\n"
                "1) Продолжить с ботом\n"
                "2) Ждать менеджера (бот временно отключится)"
            )

        bot_response += addition

    return bot_response

def manager_message_handler(notification: Notification) -> None:
    try:
        chat_id = notification.event['senderData']['chatId']
        set_manual_interaction_for_3h(chat_id)  # менеджер писал — замолкнуть на 3 часа
    except Exception as e:
        print("[DEBUG] Ошибка manager_message_handler:", e)

bot.router.outgoing_message.add_handler(manager_message_handler)

@bot.router.message()
def message_handler(notification: Notification) -> None:
    try:
        chat_id = notification.event['senderData']['chatId']

        # Не отвечаем в групповых чатах
        if "@g.us" in chat_id:
            return

        # Если уже ждём/есть сигнал не отвечать 3 часа
        if is_manual_interaction_active(chat_id):
            print(f"[DEBUG] Менеджер активен или выбрано ожидание менеджера для {chat_id}, бот молчит.")
            return

        msg_data = notification.event.get("messageData", {})
        incoming_message = None

        # Получаем текст
        if 'textMessageData' in msg_data and 'textMessage' in msg_data['textMessageData']:
            incoming_message = msg_data['textMessageData']['textMessage']
        elif 'extendedTextMessageData' in msg_data and 'text' in msg_data['extendedTextMessageData']:
            incoming_message = msg_data['extendedTextMessageData']['text']
        elif 'fileMessageData' in msg_data and 'downloadUrl' in msg_data['fileMessageData']:
            url = msg_data['fileMessageData']['downloadUrl']
            path = download_audio_file(url, "audio_message.oga")
            if path:
                incoming_message = transcribe_audio(path)
                if not incoming_message:
                    notification.answer("Извините, не удалось распознать аудио.")
                    return
            else:
                notification.answer("Извините, не удалось загрузить аудио.")
                return
        else:
            notification.answer("Извините, я могу обрабатывать только текстовые сообщения.")
            return

        now_ts = time.time()

        # Инициализируем state, если не было
        if chat_id not in chat_states:
            is_new_client = (chat_id not in known_clients)
            chat_states[chat_id] = {
                "last_message_ts": now_ts,
                "manager_flag": False,
                "language": None,
                "is_new": is_new_client,
                "manager_choice_pending": False
            }
        else:
            last_ts = chat_states[chat_id].get("last_message_ts", None)
            if last_ts and (now_ts - last_ts) > 86400:
                # более 24 часов — сброс истории
                conversations[chat_id].clear()
            chat_states[chat_id]["last_message_ts"] = now_ts

        # Инициализация истории
        if chat_id not in conversations:
            conversations[chat_id] = []

        # Если нет в known_clients, добавим
        if chat_id not in known_clients:
            known_clients.add(chat_id)
            save_known_clients(known_clients)

        # 1) Проверяем, не ждём ли мы выбора (1/2) после "уточню у менеджера"
        if chat_states[chat_id].get("manager_choice_pending", False):
            # Если мы здесь, значит ждём выбора
            user_text_lower = incoming_message.strip().lower()
            chosen_lang = chat_states[chat_id].get("language", "ru")

            # Проверяем варианты
            if user_text_lower in ["1", "один", "1)", "продолжить"]:
                # Продолжаем диалог
                chat_states[chat_id]["manager_choice_pending"] = False
                answer = generate_response(incoming_message, chat_id)
                notification.answer(answer)
                return

            elif user_text_lower in ["2", "два", "2)", "подождать", "ждать"]:
                # Ждём менеджера -> бот отключается 3 часа
                set_manual_interaction_for_3h(chat_id)
                chat_states[chat_id]["manager_choice_pending"] = False

                if chosen_lang == "kk":
                    msg = "Жарайды, менеджер сізбен байланысады. Бот уақытша сөндірілді. Рахмет! 🙏"
                else:
                    msg = "Хорошо, запрос передан менеджеру, бот пока отключается. Спасибо! 🙏"

                notification.answer(msg)
                return

            else:
                # Непонятный ответ
                if chosen_lang == "kk":
                    msg = (
                        "Түсініксіз жауап бердіңіз. Таңдаңыз:\n"
                        "1) Ботпен сөйлесуді жалғастыру\n"
                        "2) Менеджерді күтуді қалаймын"
                    )
                else:
                    msg = (
                        "Не понял ответ. Пожалуйста, выберите:\n"
                        "1) Продолжить диалог с ботом\n"
                        "2) Ждать менеджера"
                    )
                notification.answer(msg)
                return

        # 2) Если не ждём выбора (1/2), проверяем язык
        if chat_states[chat_id]["language"] is None:
            # Спрашиваем язык
            if chat_states[chat_id]["is_new"]:
                # Новый клиент
                greeting_text = (
                    "Сәлеметсіз бе, Сізді Роботек робототехника мектебінің жасанды интеллекті қарсы алады! 🚀\n"
                    "Здравствуйте, Вас приветствует искусственный интеллект школы робототехники Роботек! 🚀\n\n"
                    "Қай тілде жалғастырайық? Жауап ретінде 1 немесе 2 деп жазыңыз.\n1. Қазақша\n2. Русский\n\n"
                    "На каком языке продолжим? Напишите 1 или 2 в ответ.\n1. Қазақша\n2. Русский"
                )
                notification.answer(greeting_text)
                conversations[chat_id].append({"role": "assistant", "content": greeting_text})
                chat_states[chat_id]["language"] = "waiting"
            else:
                # Старый клиент, просто коротко спросим язык
                choose_lang = (
                    "Сәлеметсіз бе!\n"
                    "Здравствуйте!\n\n"
                    "Қай тілде жалғастырайық?😊\n1. Қазақша\n2. Русский\n"
                    "На каком языке продолжим?😊\n1. Қазақша\n2. Русский"
                )
                notification.answer(choose_lang)
                conversations[chat_id].append({"role": "assistant", "content": choose_lang})
                chat_states[chat_id]["language"] = "waiting"
            return

        if chat_states[chat_id]["language"] == "waiting":
            # Ждём «1» или «2» для выбора языка
            user_text_lower = incoming_message.strip().lower()
            if user_text_lower in ["1", "қазақ", "каз", "kaz", "kk", "казахский"]:
                chat_states[chat_id]["language"] = "kk"
                if chat_states[chat_id]["is_new"]:
                    msg_kk = (
                        "Сіз қандай сұрақ бойынша хабарласып тұрсыз? 🚀\n\n"
                        "1. Баламды курсқа жазу\n"
                        "2. Бизнес бойынша ынтымақтастық\n"
                        "3. Басқа сұрақ"
                    )
                    notification.answer(msg_kk)
                    conversations[chat_id].append({"role": "assistant", "content": msg_kk})
                else:
                    msg_kk = "Сізбен қайта қауышқаныма қуаныштымын! 😊 Сұрағыңызды жазыңыз."
                    notification.answer(msg_kk)
                    conversations[chat_id].append({"role": "assistant", "content": msg_kk})
                return
            elif user_text_lower in ["2", "рус", "ru", "russian", "русский"]:
                chat_states[chat_id]["language"] = "ru"
                if chat_states[chat_id]["is_new"]:
                    msg_ru = (
                        "Подскажите, по какому вопросу Вы обращаетесь? 🚀\n\n"
                        "1. Обучение для моего ребенка\n"
                        "2. Сотрудничество\n"
                        "3. Другой вопрос"
                    )
                    notification.answer(msg_ru)
                    conversations[chat_id].append({"role": "assistant", "content": msg_ru})
                else:
                    msg_ru = "Рад снова видеть вас! 😊 Напишите ваш вопрос."
                    notification.answer(msg_ru)
                    conversations[chat_id].append({"role": "assistant", "content": msg_ru})
                return
            else:
                # Непонятный ответ
                rechoose = (
                    "Қай тілде жалғастырайық?😊\n1. Қазақша\n2. Русский\n"
                    "На каком языке продолжим?😊\n1. Қазақша\n2. Русский"
                )
                notification.answer(rechoose)
                conversations[chat_id].append({"role": "assistant", "content": rechoose})
                return

        # Если язык уже выбран, просто передаём сообщение в GPT
        answer = generate_response(incoming_message, chat_id)
        notification.answer(answer)

    except Exception as e:
        print("[DEBUG] Ошибка в message_handler:", e)

if __name__ == "__main__":
    print("[DEBUG] Запуск бота...")
    bot.run_forever()